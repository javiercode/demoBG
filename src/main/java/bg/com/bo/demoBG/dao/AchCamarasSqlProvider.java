package bg.com.bo.demoBG.dao;

import bg.com.bo.demoBG.domain.AchCamaras;
import bg.com.bo.demoBG.domain.AchCamarasExample.Criteria;
import bg.com.bo.demoBG.domain.AchCamarasExample.Criterion;
import bg.com.bo.demoBG.domain.AchCamarasExample;
import java.util.List;
import java.util.Map;
import org.apache.ibatis.jdbc.SQL;

public class AchCamarasSqlProvider {

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table GANADERO.ACH_CAMARAS
	 * @mbg.generated
	 */
	public String countByExample(AchCamarasExample example) {
		SQL sql = new SQL();
		sql.SELECT("count(*)").FROM("GANADERO.ACH_CAMARAS");
		applyWhere(sql, example, false);
		return sql.toString();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table GANADERO.ACH_CAMARAS
	 * @mbg.generated
	 */
	public String deleteByExample(AchCamarasExample example) {
		SQL sql = new SQL();
		sql.DELETE_FROM("GANADERO.ACH_CAMARAS");
		applyWhere(sql, example, false);
		return sql.toString();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table GANADERO.ACH_CAMARAS
	 * @mbg.generated
	 */
	public String insertSelective(AchCamaras row) {
		SQL sql = new SQL();
		sql.INSERT_INTO("GANADERO.ACH_CAMARAS");
		if (row.getCodigo() != null) {
			sql.VALUES("CODIGO", "#{codigo,jdbcType=INTEGER}");
		}
		if (row.getDescripcion() != null) {
			sql.VALUES("DESCRIPCION", "#{descripcion,jdbcType=VARCHAR}");
		}
		if (row.getTz_lock() != null) {
			sql.VALUES("TZ_LOCK", "#{tz_lock,jdbcType=VARCHAR}");
		}
		return sql.toString();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table GANADERO.ACH_CAMARAS
	 * @mbg.generated
	 */
	public String selectByExample(AchCamarasExample example) {
		SQL sql = new SQL();
		if (example != null && example.isDistinct()) {
			sql.SELECT_DISTINCT("CODIGO");
		} else {
			sql.SELECT("CODIGO");
		}
		sql.SELECT("DESCRIPCION");
		sql.SELECT("TZ_LOCK");
		sql.FROM("GANADERO.ACH_CAMARAS");
		applyWhere(sql, example, false);
		if (example != null && example.getOrderByClause() != null) {
			sql.ORDER_BY(example.getOrderByClause());
		}
		return sql.toString();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table GANADERO.ACH_CAMARAS
	 * @mbg.generated
	 */
	public String updateByExampleSelective(Map<String, Object> parameter) {
		AchCamaras row = (AchCamaras) parameter.get("row");
		AchCamarasExample example = (AchCamarasExample) parameter.get("example");
		SQL sql = new SQL();
		sql.UPDATE("GANADERO.ACH_CAMARAS");
		if (row.getCodigo() != null) {
			sql.SET("CODIGO = #{row.codigo,jdbcType=INTEGER}");
		}
		if (row.getDescripcion() != null) {
			sql.SET("DESCRIPCION = #{row.descripcion,jdbcType=VARCHAR}");
		}
		if (row.getTz_lock() != null) {
			sql.SET("TZ_LOCK = #{row.tz_lock,jdbcType=VARCHAR}");
		}
		applyWhere(sql, example, true);
		return sql.toString();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table GANADERO.ACH_CAMARAS
	 * @mbg.generated
	 */
	public String updateByExample(Map<String, Object> parameter) {
		SQL sql = new SQL();
		sql.UPDATE("GANADERO.ACH_CAMARAS");
		sql.SET("CODIGO = #{row.codigo,jdbcType=INTEGER}");
		sql.SET("DESCRIPCION = #{row.descripcion,jdbcType=VARCHAR}");
		sql.SET("TZ_LOCK = #{row.tz_lock,jdbcType=VARCHAR}");
		AchCamarasExample example = (AchCamarasExample) parameter.get("example");
		applyWhere(sql, example, true);
		return sql.toString();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table GANADERO.ACH_CAMARAS
	 * @mbg.generated
	 */
	public String updateByPrimaryKeySelective(AchCamaras row) {
		SQL sql = new SQL();
		sql.UPDATE("GANADERO.ACH_CAMARAS");
		if (row.getDescripcion() != null) {
			sql.SET("DESCRIPCION = #{descripcion,jdbcType=VARCHAR}");
		}
		if (row.getTz_lock() != null) {
			sql.SET("TZ_LOCK = #{tz_lock,jdbcType=VARCHAR}");
		}
		sql.WHERE("CODIGO = #{codigo,jdbcType=INTEGER}");
		return sql.toString();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table GANADERO.ACH_CAMARAS
	 * @mbg.generated
	 */
	protected void applyWhere(SQL sql, AchCamarasExample example, boolean includeExamplePhrase) {
		if (example == null) {
			return;
		}
		String parmPhrase1;
		String parmPhrase1_th;
		String parmPhrase2;
		String parmPhrase2_th;
		String parmPhrase3;
		String parmPhrase3_th;
		if (includeExamplePhrase) {
			parmPhrase1 = "%s #{example.oredCriteria[%d].allCriteria[%d].value}";
			parmPhrase1_th = "%s #{example.oredCriteria[%d].allCriteria[%d].value,typeHandler=%s}";
			parmPhrase2 = "%s #{example.oredCriteria[%d].allCriteria[%d].value} and #{example.oredCriteria[%d].criteria[%d].secondValue}";
			parmPhrase2_th = "%s #{example.oredCriteria[%d].allCriteria[%d].value,typeHandler=%s} and #{example.oredCriteria[%d].criteria[%d].secondValue,typeHandler=%s}";
			parmPhrase3 = "#{example.oredCriteria[%d].allCriteria[%d].value[%d]}";
			parmPhrase3_th = "#{example.oredCriteria[%d].allCriteria[%d].value[%d],typeHandler=%s}";
		} else {
			parmPhrase1 = "%s #{oredCriteria[%d].allCriteria[%d].value}";
			parmPhrase1_th = "%s #{oredCriteria[%d].allCriteria[%d].value,typeHandler=%s}";
			parmPhrase2 = "%s #{oredCriteria[%d].allCriteria[%d].value} and #{oredCriteria[%d].criteria[%d].secondValue}";
			parmPhrase2_th = "%s #{oredCriteria[%d].allCriteria[%d].value,typeHandler=%s} and #{oredCriteria[%d].criteria[%d].secondValue,typeHandler=%s}";
			parmPhrase3 = "#{oredCriteria[%d].allCriteria[%d].value[%d]}";
			parmPhrase3_th = "#{oredCriteria[%d].allCriteria[%d].value[%d],typeHandler=%s}";
		}
		StringBuilder sb = new StringBuilder();
		List<Criteria> oredCriteria = example.getOredCriteria();
		boolean firstCriteria = true;
		for (int i = 0; i < oredCriteria.size(); i++) {
			Criteria criteria = oredCriteria.get(i);
			if (criteria.isValid()) {
				if (firstCriteria) {
					firstCriteria = false;
				} else {
					sb.append(" or ");
				}
				sb.append('(');
				List<Criterion> criterions = criteria.getAllCriteria();
				boolean firstCriterion = true;
				for (int j = 0; j < criterions.size(); j++) {
					Criterion criterion = criterions.get(j);
					if (firstCriterion) {
						firstCriterion = false;
					} else {
						sb.append(" and ");
					}
					if (criterion.isNoValue()) {
						sb.append(criterion.getCondition());
					} else if (criterion.isSingleValue()) {
						if (criterion.getTypeHandler() == null) {
							sb.append(String.format(parmPhrase1, criterion.getCondition(), i, j));
						} else {
							sb.append(String.format(parmPhrase1_th, criterion.getCondition(), i, j,
									criterion.getTypeHandler()));
						}
					} else if (criterion.isBetweenValue()) {
						if (criterion.getTypeHandler() == null) {
							sb.append(String.format(parmPhrase2, criterion.getCondition(), i, j, i, j));
						} else {
							sb.append(String.format(parmPhrase2_th, criterion.getCondition(), i, j,
									criterion.getTypeHandler(), i, j, criterion.getTypeHandler()));
						}
					} else if (criterion.isListValue()) {
						sb.append(criterion.getCondition());
						sb.append(" (");
						List<?> listItems = (List<?>) criterion.getValue();
						boolean comma = false;
						for (int k = 0; k < listItems.size(); k++) {
							if (comma) {
								sb.append(", ");
							} else {
								comma = true;
							}
							if (criterion.getTypeHandler() == null) {
								sb.append(String.format(parmPhrase3, i, j, k));
							} else {
								sb.append(String.format(parmPhrase3_th, i, j, k, criterion.getTypeHandler()));
							}
						}
						sb.append(')');
					}
				}
				sb.append(')');
			}
		}
		if (sb.length() > 0) {
			sql.WHERE(sb.toString());
		}
	}
}